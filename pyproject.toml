[tool.poetry]
name = "core-project"
version = "0.1.0"
readme = "README.md"
description = ""
authors = ["tomtuz"]
packages = [
    {include = "core", from = "src"},
    {include = "dev"}
]

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.32.3"
click = "^8.1.7"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
ruff = "^0.6.3"
pre-commit = "^3.8.0"
mypy = "^1.11.2"
types-requests = "^2.32.0"
types-click = "^7.1.8"

[tool.poetry.scripts]
pop = "core.cli:run"

# CLI helpers
poi = "dev.helpers:install"
test = "dev.helpers:test"
lint = "dev.helpers:lint"
format = "dev.helpers:format"
lintF = "dev.helpers:lintF"
formatF = "dev.helpers:formatF"
typecheck = "dev.helpers:typecheck"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["src"]
fix = true
show-fixes = true
output-format = "full"
target-version = "py312"
line-length = 88

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.ruff.lint]
unfixable = [
    "ERA", # do not autoremove commented out code
]
select = [
    "B",  # flake8-bugbear
    "E",  # pycodestyle error
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "W",  # pycodestyle warning
]

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
order-by-type = false

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.12"
strict = true
pretty = true
local_partial_types = true
follow_imports = "silent"
check_untyped_defs = true
disallow_untyped_defs = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
ignore_missing_imports = true
