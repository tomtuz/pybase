[tool.poetry]
name = "core-project"
version = "0.1.0"
description = "Python project template"
authors = ["tomtuz"]
readme = "README.md"
license = "MIT"
packages = [{ include = "core", from = "src" }, { include = "dev" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.32.3"
click = "^8.1.7"
python-dotenv = "^1.0.1"
python-json-logger = "^2.0.7"
colorama = "^0.4.6"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^4.1.0"
ruff = "^0.6.3"
pre-commit = "^3.8.0"
mypy = "^1.11.2"
types-requests = "^2.32.0"
types-click = "^7.1.8"

[tool.poetry.scripts]
pop = "core.cli:run"

# CLI helpers
poi = "dev.helpers:install"
test = "dev.helpers:test"
lint = "dev.helpers:lint"
format = "dev.helpers:format"
lintF = "dev.helpers:lintF"
formatF = "dev.helpers:formatF"
typecheck = "dev.helpers:typecheck"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["src"]
fix = true
show-fixes = true
output-format = "full"
target-version = "py312"
line-length = 88

[tool.ruff.lint]
ignore = [
  "E501",  # Line length
  "B008",  # Naming convention
  "F841",  # Assigned but unused
  "B904",  # Assert in non-test
  "UP007"  # Unused variable
]
select = [
    "B",  # flake8-bugbear
    "E",  # pycodestyle error
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "W",  # pycodestyle warning
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_decorators = false

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=src --cov-report=term-missing"
testpaths = ["tests"]
